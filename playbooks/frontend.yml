---
- hosts: frontend_staging_london:frontend_staging_dublin:frontend_production_london:frontend_production_dublin
  vars:
    ansible_env: "{{ lookup('env', 'ANSIBLE_ENV') }}"
    user_scripts_dir: /home/ec2-user/scripts
    monitoring_scripts_dir: "{{ user_scripts_dir }}/aws-scripts-mon"
    aws_region: "{{ lookup('env', 'AWS_REGION') }}"
    inventory: "{{ lookup('env', 'INVENTORY') }}"

  become: yes
  become_method: sudo
  remote_user: ec2-user

  tasks:
    - name: Install packages
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - perl-Switch
        - perl-DateTime
        - perl-Sys-Syslog
        - perl-LWP-Protocol-https
        - perl-Digest-SHA
        - perl-URI
        - perl-libwww-perl
        - perl-MIME-tools
        - perl-Crypt-SSLeay
        - perl-XML-LibXML
        - unzip
        - curl
        - awslogs
        - jq

    - name: Checking if CloudWatch Monitoring Configuration Files Exist
      stat: "path={{ monitoring_scripts_dir }}"
      register: monitoring_scripts_dir_check

    - name: Setup Amazon CloudWatch Memory Monitoring Script
      import_tasks: '../tasks/cloudwatch_memory_monitoring.yml'
      vars:
        scripts_dir: "{{ user_scripts_dir }}"
      when: monitoring_scripts_dir_check.stat.exists == False

    - name: Set SHELL cron var
      cronvar:
        name: SHELL
        value: /bin/bash

    - name: Set PATH cron var
      cronvar:
        name: PATH
        value: /sbin:/bin:/usr/sbin:/usr/bin

    - name: Set MAILTO cron var
      cronvar:
        name: MAILTO
        value: root

    - name: Set HOME cron var
      cronvar:
        name: HOME
        value: /

    - name: Create Memory Metrics Logging Cron
      cron:
        name: Report Memory Metrics
        cron_file: /etc/crontab
        minute: "*"
        hour: "*"
        day: "*"
        user: root
        job: "{{ monitoring_scripts_dir }}/mon-put-instance-data.pl --mem-used --from-cron --mem-avail --swap-used --mem-used-incl-cache-buff"

    - name: Create security-updates script for cron.daily
      copy:
        src: ./scripts/security-updates
        dest: /etc/cron.daily
        owner: root
        group: root
        mode: 0755

    - name: Create cron.hourly
      cron:
        name: Run Hourly Cron
        cron_file: /etc/crontab
        minute: "42"
        hour: "*"
        day: "*"
        user: root
        job: "run-parts /etc/cron.hourly"

    - name: Create cron.daily
      cron:
        name: Run Daily Cron
        cron_file: /etc/crontab
        minute: "12"
        hour: "{{ groups[inventory].index(inventory_hostname) + 2 }}"
        day: "*"
        user: root
        job: "run-parts /etc/cron.daily"

    - name: User Setup
      include_tasks: '../tasks/users.yml'
      vars:
        user: "{{ item }}"
      with_items:
        - adrianclay
        - emileswarts
        - eugenen
        - marko
        - mohamedh
        - ryanmacg
        - zahids
      tags:
         - users

    - name: Setup Amazon CloudWatch Memory Monitoring Script
      import_tasks: '../tasks/cloudwatch_log_format.yml'
      vars:
        env: "{{ ansible_env }}"

    - name: Start ecs
      service:
        name: ecs
        state: started
        enabled: yes

    - name: Start awslogs agent
      service:
        name: awslogs
        state: started
        enabled: yes

    - name: Configure the AWS CLI
      template:
        src: ./templates/awscli.conf
        dest: /etc/awslogs/awscli.conf
        owner: root
        group: root
        mode: 0644
      vars:
        region: "{{ aws_region }}"

    - name: Ensure Latest ECS Agent
      yum:
        name: ecs-init
        state: latest

    - name: Install Security Updates
      yum:
        name: '*'
        security: yes
        state: latest

    - name: Ensure Anacron is disabled by making the binary non executable
      file:
        path: /usr/sbin/anacron
        mode: 0644
